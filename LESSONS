* Read the problem carefully
In problem 193 (Graph Coloring) a lot of time was wasted because I had
not notice the difference between black and white nodes (white nodes
can be connected to each other).

* Think about algorithm 
In problem 193, first I missed that colors should be propagated. Then
I missed that candidates were only 'black' and 'white'.

* C: dynamic memory allocation in functions
I declared an array as `int x[num];' with `num' being a global
variable. It compiled, but turned out that no memory is allocated to
this array. For this either use constant for array size, or allocate
on heap.

* C: Initialize arrays
In problem 193, I forgot to initialize global arrays, and that costed
me half a day. I think only static variables are initialized to
default values. Be on the safe side and always initialize.

* Consider the range of output (and intermediate data) In problem 153,
I kept receiving wrong answer because I had used size_t to store
factorial of a large number. This factorial was then divided by
another factorial. The right way to do it was to compute the value of
this division progressively, as otherwise the factorials themselves
would not fit in any normal data type.

* Data types may have different number of bits on other systems In
problem 1A (codeforces), my code produced correct result on my system
and wrong result on judge. It was only resolved when I changed 'long
int' to 'long long int'.

* When working on remote, make sure that you are also submitting from
  remote. For a problem, I kept receiving WA because I was editing the
  code on remote, but submitted the same code that I had on local
  machine. Perhaps the best strategy is to clone the code repository
  on the local and work directly on local.

* size_t in loops In decrementing loops, if the counter is decremented
down to zero, the counter type should be int (and not size_t), as
otherwise the loop condition (counter >=0) will be always true.

* Do not use arbitrary syntax for challenging problems. In 565(sat
  solving) I had a lot of trouble only because of using
  (option!=option) instead of (option=!option) in a loop. Once you've
  used such syntax, it is very hard to find it. So avoid it altogether
  for harder problems.