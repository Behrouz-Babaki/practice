#include <iostream>
#include <sstream>
#include <string>
#include <vector>

using std::cout;
using std::endl;
using std::cin;
using std::getline;
using std::stringstream;
using std::string;
using std::vector;

/**
 * the quick brown fox jumps over the lazy dog
 * This sentence is consisted of 43 characters
 */

bool notBlank(string * const);

int main(void){

  string str;
  getline(cin, str);
  stringstream ss (str);
  int number_of_cases;
  ss >> number_of_cases;
  getline (cin, str); //reading the blank line
  
  
  for (int caseCounter = 0; caseCounter < number_of_cases; caseCounter ++)
    {
      vector < string* > vec;
      string * line = new string;
      getline (cin, *line);
      while (cin.good() && notBlank(line)){
	vec.push_back(line);
	
	line = new string;
	getline(cin, *line);
      }

      decode(vec);
      
      for (vector < string* >::iterator itr = vec.begin(); itr != vec.end(); itr++)
	delete *itr;
    }


  
  return 0;
}

bool notBlank(string * const str ){
  if ((*str).length() == 0)
    return false;
  
  for(string::const_iterator itr = (*str).begin(); itr != (*str).end(); itr++)
    {
      int val = static_cast<int> (*itr);
      if (val != 9 && val != 10 && val != 32)
	return true;
      }

  return false;
}

void decode (vector < string* > inputVec){
  
}

bool extractCode (const string& str, vector<int>& strMap){
  return false;
}
